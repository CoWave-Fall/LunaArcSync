// ignore: unused_import
import 'package:intl/intl.dart' as intl;
import 'app_localizations.dart';

// ignore_for_file: type=lint

/// The translations for English (`en`).
class AppLocalizationsEn extends AppLocalizations {
  AppLocalizationsEn([String locale = 'en']) : super(locale);

  @override
  String get settingsPageTitle => 'Settings';

  @override
  String get languageSettingTitle => 'Language';

  @override
  String get languageSettingSubtitle => 'English';

  @override
  String get importDatabaseTitle => 'Import Database';

  @override
  String get exportDatabaseTitle => 'Export Database';

  @override
  String get darkModeTitle => 'Dark Mode';

  @override
  String get notificationsTitle => 'Notifications';

  @override
  String get clearCacheTitle => 'Clear Cache';

  @override
  String get aboutTitle => 'About';

  @override
  String get appVersion => '0.0.1';

  @override
  String get appLegalese =>
      'LunaArcSync is an open-source document management and synchronization application.';

  @override
  String get aiContentNotice =>
      'This program contains content generated by generative AI. Thanks to Gemini, Claude, and DeepSeek for their assistance during development.';

  @override
  String get trademarkNotice => 'Trademark Notice:';

  @override
  String get trademarkGemini => '• \"Gemini\" is a trademark of Google LLC';

  @override
  String get trademarkClaude => '• \"Claude\" is a trademark of Anthropic PBC';

  @override
  String get trademarkDeepSeek => '• \"DeepSeek\" is a trademark of DeepSeek';

  @override
  String get trademarkDisclaimer =>
      '• The above trademarks are owned by their respective owners, and this program does not claim ownership of these trademarks';

  @override
  String get appInfoPlaceholder =>
      'LunaArcSync is an open-source document management and synchronization application.\n\nContributors (in no particular order):\n• Gemini\n• Claude\n• DeepSeek\n• CoWave-Fall\n\nProject Repository:\nhttps://github.com/CoWave-Fall/LunaArcSync\n\nAuthor Profile:\nhttps://github.com/CoWave-Fall/';

  @override
  String get viewLicenses => 'View Licenses';

  @override
  String get licensesTitle => 'Open Source Licenses';

  @override
  String get licensesContent =>
      'Built with the following open source projects:\n\n• Flutter (BSD-3-Clause)\n• Dio (MIT)\n• flutter_bloc (MIT)\n• go_router (BSD-3-Clause)\n• image_cropper (MIT)\n• pdfx (MIT)\n• flutter_svg (MIT)\n• file_picker (MIT)\n• shared_preferences (BSD-3-Clause)\n• provider (MIT)\n• file_saver (MIT)\n• path_provider (BSD-3-Clause)\n• device_info_plus (MIT)\n• package_info_plus (MIT)\n• cunning_document_scanner (MIT)\n• image (MIT)\n• path (BSD-3-Clause)\n• bloc (MIT)\n• get_it (MIT)\n• injectable (MIT)\n• freezed_annotation (MIT)\n• json_annotation (MIT)\n• flutter_secure_storage (MIT)\n• intl (BSD-3-Clause)\n• material_tag_editor (MIT)\n• image_cropper_platform_interface (MIT)\n\nOther dependencies see pubspec.yaml';

  @override
  String get overviewAppBarTitle => 'Overview';

  @override
  String get overviewRecentActivity => 'Recent Activity';

  @override
  String get logoutButtonTooltip => 'Logout';

  @override
  String get welcomeBack => 'Welcome Back!';

  @override
  String get welcomeSubtitle => 'Here is a summary of your activities.';

  @override
  String get jobsPageTitle => 'Jobs';

  @override
  String get loadHistoryTooltip => 'Load History';

  @override
  String get refreshTooltip => 'Refresh';

  @override
  String get deleteJobTitle => 'Delete Job';

  @override
  String get deleteJobMessage =>
      'Are you sure you want to delete this job? This action cannot be undone.';

  @override
  String get delete => 'Delete';

  @override
  String get cancel => 'Cancel';

  @override
  String get jobCompleted => 'Task completed';

  @override
  String get pdfExportCompleted => 'PDF export completed';

  @override
  String get ocrProcessingCompleted => 'OCR processing completed';

  @override
  String get batchExportCompleted => 'Batch export completed';

  @override
  String get view => 'View';

  @override
  String get jobFailed => 'Task failed';

  @override
  String get pdfExportFailed => 'PDF export failed';

  @override
  String get ocrProcessingFailed => 'OCR processing failed';

  @override
  String get batchExportFailed => 'Batch export failed';

  @override
  String get unknownError => 'Unknown error';

  @override
  String get downloadingResult => 'Downloading result file...';

  @override
  String downloadSuccess(String fileName, String fileSize) {
    return 'File downloaded successfully! Saved as $fileName (${fileSize}MB)';
  }

  @override
  String downloadFailed(String error) {
    return 'Download failed: $error';
  }

  @override
  String get jobId => 'Job ID';

  @override
  String get submitted => 'Submitted';

  @override
  String get started => 'Started';

  @override
  String get completed => 'Completed';

  @override
  String get pageId => 'Page ID';

  @override
  String get downloadResult => 'Download Result';

  @override
  String get loadingJobs => 'Loading Jobs...';

  @override
  String get refreshingJobs => 'Refreshing Jobs...';

  @override
  String get failedToLoadJobs => 'Failed to Load Jobs';

  @override
  String get tryAgain => 'Try Again';

  @override
  String get noJobsFound => 'No Jobs Found';

  @override
  String get noJobsDescription =>
      'You don\'t have any active jobs at the moment.\nAll your tasks have been completed or there are no jobs in progress.';

  @override
  String get refreshJobs => 'Refresh Jobs';

  @override
  String get viewJobHistory => 'View Job History';

  @override
  String get jobsInfo =>
      'Jobs will appear here when you start processing documents or performing batch operations.';

  @override
  String get cannotDeleteQueuedJobs =>
      'Cannot delete jobs that are queued or processing. Please wait for them to complete.';

  @override
  String failedToDeleteJob(String error) {
    return 'Failed to delete job: $error';
  }

  @override
  String get gridColumns => 'Grid Columns';

  @override
  String get columns => 'Columns';

  @override
  String get defaultViewMode => 'Default View Mode';

  @override
  String get defaultViewModeDescription =>
      'Choose how pages are displayed by default';

  @override
  String get listView => 'List View';

  @override
  String get gridView => 'Grid View';

  @override
  String get darkModeImageProcessing => 'Dark Mode Image Processing';

  @override
  String get darkModeImageProcessingSubtitle =>
      'Adjust image processing for dark mode';

  @override
  String get english => 'English';

  @override
  String get chinese => '中文';

  @override
  String get editDocumentInfo => 'Edit Document Info';

  @override
  String get documentTitle => 'Document Title';

  @override
  String get pleaseEnterTitle => 'Please enter a title';

  @override
  String get loadingDocument => 'Loading Document...';

  @override
  String get documentEmpty =>
      'This document is empty. Add a page to get started!';

  @override
  String get switchView => 'Switch View';

  @override
  String get gridSettings => 'Grid Settings';

  @override
  String get exportAsPdf => 'Export as PDF';

  @override
  String get deletePage => 'Delete Page';

  @override
  String get movePage => 'Move Page';

  @override
  String get addPage => 'Add Page';

  @override
  String get edit => 'Edit';

  @override
  String get done => 'Done';

  @override
  String get save => 'Save';

  @override
  String get confirm => 'Confirm';

  @override
  String get areYouSure => 'Are you sure?';

  @override
  String get thisActionCannotBeUndone => 'This action cannot be undone.';

  @override
  String get page => 'Page';

  @override
  String get pages => 'Pages';

  @override
  String get ofPages => 'of';

  @override
  String get noPagesFound => 'No pages found';

  @override
  String get addFirstPage => 'Add your first page';

  @override
  String get scanDocument => 'Scan Document';

  @override
  String get importImage => 'Import Image';

  @override
  String get takePhoto => 'Take Photo';

  @override
  String get selectFromGallery => 'Select from Gallery';

  @override
  String get documentSaved => 'Document saved successfully';

  @override
  String get documentDeleted => 'Document deleted successfully';

  @override
  String get pageDeleted => 'Page deleted successfully';

  @override
  String get pageMoved => 'Page moved successfully';

  @override
  String get errorOccurred => 'An error occurred';

  @override
  String get retry => 'Retry';

  @override
  String get close => 'Close';

  @override
  String get aboutAppBarTitle => 'About';

  @override
  String get errorLoadingAbout => 'Failed to load about information';

  @override
  String get connectionErrorTitle => 'Server Connection Failed';

  @override
  String get authErrorTitle => 'Authentication Failed';

  @override
  String get backToLogin => 'Back to Login';

  @override
  String get retryButton => 'Retry';

  @override
  String get aboutAppInfo => 'Application Information';

  @override
  String get aboutAppName => 'Luna Arc Sync';

  @override
  String get aboutVersion => 'Version';

  @override
  String get aboutContact => 'Contact Information';

  @override
  String get aboutGitHub => 'GitHub Repository';

  @override
  String get aboutServerInfo => 'Server Information';

  @override
  String get aboutUserAccount => 'User Account';

  @override
  String get aboutClientInfo => 'Client Information';

  @override
  String get aboutLoginStatus => 'Login Status';

  @override
  String get aboutChecking => 'Checking...';

  @override
  String get aboutLoggedIn => 'Logged In';

  @override
  String get aboutNotLoggedIn => 'Not Logged In';

  @override
  String get aboutUserId => 'User ID';

  @override
  String get aboutPackageName => 'Package Name';

  @override
  String get aboutDeviceModel => 'Device Model';

  @override
  String get aboutDeviceOS => 'Operating System';

  @override
  String get aboutDeviceInfo => 'Device Information';

  @override
  String get aboutLoading => 'Loading...';

  @override
  String get aboutUnknown => 'Unknown';

  @override
  String get loginManualLoginRequired =>
      'Please log in manually once to save credentials';

  @override
  String loginAutoLoginFailed(String error) {
    return 'Auto login failed: $error';
  }

  @override
  String get loginDeleteServer => 'Delete Server';

  @override
  String loginDeleteServerConfirm(String serverName) {
    return 'Are you sure you want to delete server \"$serverName\"?';
  }

  @override
  String loginServerDeleted(String serverName) {
    return 'Server \"$serverName\" deleted';
  }

  @override
  String loginDeleteServerFailed(String error) {
    return 'Failed to delete server: $error';
  }

  @override
  String get appTitle => 'Luna Arc Sync';

  @override
  String get appTitleCharacters => 'Luna Arc Sync';

  @override
  String get settingsExportDatabase => 'Export Database';

  @override
  String get settingsExportDatabaseDescription =>
      'This will export all your data, including documents, pages, settings, etc.\n\n';

  @override
  String get settingsExportDatabaseAdditionalInfo =>
      'The exported data will be saved as a ZIP file, which you can import on other devices.\n\nAre you sure you want to continue?';

  @override
  String get settingsImportDatabase => 'Import Database';

  @override
  String get settingsImportDatabaseDescription =>
      'Please select the previously exported ZIP file for import.\n\n';

  @override
  String get settingsImportDatabaseAdditionalInfo =>
      'Note: Importing data will overwrite all data on the current device. Please ensure you have backed up important information.\n\nYou need to restart the app after import for it to take effect.\n\nAre you sure you want to continue?';

  @override
  String get settingsFileTooLarge =>
      'File too large, please select a file smaller than 100MB';

  @override
  String get settingsFileCorrupted =>
      'Cannot read file, please ensure the file is not corrupted';

  @override
  String get settingsNoFileSelected => 'No file selected';

  @override
  String settingsFileSelectionError(String error) {
    return 'Error selecting file: $error';
  }

  @override
  String get settingsSavingExportFile => 'Saving export file...';

  @override
  String get settingsSaveExportFile => 'Save Export File';

  @override
  String get settingsSaveCancelled => 'Save cancelled';

  @override
  String settingsExportSuccess(String fileName, String fileSize) {
    return 'Export successful! File saved as $fileName (${fileSize}MB)';
  }

  @override
  String settingsSaveFileFailed(String error) {
    return 'Failed to save file: $error';
  }

  @override
  String get saveFile => 'Save File';

  @override
  String get saveCancelled => 'Save cancelled';

  @override
  String get settingsImportSuccess => 'Import Successful';

  @override
  String get settingsImportSuccessDescription => 'Data import successful!\n\n';

  @override
  String get settingsImportSuccessAdditionalInfo =>
      'To ensure all data is loaded correctly, please restart the application.\n\nAfter clicking OK, the app will close. Please manually reopen it.';

  @override
  String get settingsRefreshPageToCompleteImport =>
      'Please refresh the page to complete import';

  @override
  String get settingsExportConfirmMessage =>
      'The exported data will be saved as a ZIP file, which you can import and use on other devices.\n\nAre you sure you want to continue?';

  @override
  String get settingsAppearanceSettings => 'Appearance Settings';

  @override
  String get settingsDisplaySettings => 'Display Settings';

  @override
  String get settingsJobSettings => 'Job Settings';

  @override
  String get settingsNotificationSettings => 'Notification Settings';

  @override
  String get settingsDataManagement => 'Data Management';

  @override
  String get settingsAbout => 'About';

  @override
  String get settingsPollingIntervalLabel => 'seconds';

  @override
  String get settingsOpenSourceThanks =>
      'Thanks to the following open source projects:';

  @override
  String get settingsOtherDependencies =>
      'Other dependencies see pubspec.yaml file';

  @override
  String get settingsLicenseTitle => 'License';

  @override
  String settingsLicenseUnavailable(String licenseType) {
    return 'License content is currently unavailable.\n\nLicense type: $licenseType\n\nPlease visit the project homepage to view the complete license information.';
  }

  @override
  String get settingsAppName => 'LunaArcSync';

  @override
  String get settingsProgramContributors => 'Program';

  @override
  String get settingsAiContentNotice => 'AI Generated Content Notice';

  @override
  String get settingsTechnicalInfo => 'Technical Information';

  @override
  String get settingsPackageName => 'Package Name';

  @override
  String get settingsVersion => 'Version';

  @override
  String get settingsBuildNumber => 'Build Number';

  @override
  String get settingsProjectUrl => 'Project URL';

  @override
  String get settingsAuthorUrl => 'Author URL';

  @override
  String get settingsThemeSettings => 'Theme Settings';

  @override
  String get settingsThemeColor => 'Theme Color';

  @override
  String get settingsThemeColorDescription => 'Choose app theme color';

  @override
  String get settingsBackgroundImage => 'Background Image';

  @override
  String get settingsBackgroundImageEnabled => 'Custom background enabled';

  @override
  String get settingsBackgroundImageDisabled => 'Using default background';

  @override
  String get settingsBackgroundImageDescription =>
      'Set a custom background image. When enabled, sidebar and cards will show glassmorphic effects';

  @override
  String get settingsBackgroundImageEnable => 'Enable custom background';

  @override
  String get settingsBackgroundImageSelect => 'Select Image';

  @override
  String get settingsBackgroundImageRemove => 'Remove Background';

  @override
  String get settingsBackgroundImageRemoveConfirm =>
      'Are you sure you want to remove the custom background image?';

  @override
  String get settingsBackgroundImageSet => 'Background image set successfully';

  @override
  String settingsBackgroundImageError(String error) {
    return 'Error setting background image: $error';
  }

  @override
  String get settingsJobHistory => 'Job History';

  @override
  String settingsMaxJobHistoryRecords(String count) {
    return 'Max records: $count';
  }

  @override
  String get settingsPollingInterval => 'Polling Interval';

  @override
  String settingsPollingIntervalValue(String seconds) {
    return 'Interval: ${seconds}s';
  }

  @override
  String get settingsFollowSystem => 'Follow System';

  @override
  String get settingsFollowSystemDescription =>
      'Automatically switch based on system settings';

  @override
  String get settingsLightTheme => 'Light Theme';

  @override
  String get settingsLightThemeDescription => 'Always use light theme';

  @override
  String get settingsDarkTheme => 'Dark Theme';

  @override
  String get settingsDarkThemeDescription => 'Always use dark theme';

  @override
  String get simpleAnimationExampleTitle => 'Simple SVG Animation Example';

  @override
  String get svgAnimationDemoTitle => 'SVG Animation Demo';

  @override
  String get svgAnimationEnableAnimation => 'Enable Animation';

  @override
  String svgAnimationLogoSize(String size) {
    return 'Logo size: ${size}px';
  }

  @override
  String jobsTaskCompletedWithId(String message, String jobId) {
    return '$message! Job ID: $jobId...';
  }

  @override
  String get documentNotLoadedCannotExport =>
      'Document not loaded, cannot export';

  @override
  String get documentEmptyCannotExportPdf =>
      'Document is empty, cannot export PDF';

  @override
  String get documentExportAsPdf => 'Export as PDF';

  @override
  String documentExportAsPdfDescription(String title) {
    return 'Will export document \"$title\" as PDF file.\n\n';
  }

  @override
  String documentExportAsPdfAdditionalInfo(String pageCount) {
    return 'The document contains $pageCount pages. The export task will be processed in the background.\n\nYou can check the export progress and results in the \"Jobs\" page.\n\nAre you sure you want to start the export?';
  }

  @override
  String get documentStartExport => 'Start Export';

  @override
  String documentPdfExportTaskStarted(String jobId) {
    return 'PDF export task started! Job ID: $jobId...';
  }

  @override
  String get loginWelcomeMessage => 'Login to Luna Arc Sync';

  @override
  String get loginSelectServer => 'Select Server';

  @override
  String get loginAddServer => 'Add Server';

  @override
  String get myDocuments => 'My Documents';

  @override
  String get themeModeSystem => 'Follow System';

  @override
  String get themeModeLight => 'Light Theme';

  @override
  String get themeModeDark => 'Dark Theme';

  @override
  String get loginWelcomeBack => 'Welcome Back!';

  @override
  String get loginServerAddress => 'Server Address (IP:Port)';

  @override
  String get loginServerAddressHint => '192.168.1.100:8080';

  @override
  String get loginServerAddressHelper =>
      'Enter IP address and port (e.g., 192.168.1.100:8080)';

  @override
  String get loginEmail => 'Email';

  @override
  String get loginPassword => 'Password';

  @override
  String get loginButton => 'Login';

  @override
  String get loginSuccess => 'Login Successful!';

  @override
  String get loginRegisterPrompt => 'Don\'t have an account? Register';

  @override
  String get loginServerAddressRequired => 'Please enter the server address';

  @override
  String get loginServerAddressInvalidFormat =>
      'Please enter IP:Port format (e.g., 192.168.1.100:8080)';

  @override
  String get loginServerAddressInvalidParts =>
      'Invalid format. Use IP:Port (e.g., 192.168.1.100:8080)';

  @override
  String get loginEmailRequired => 'Please enter a valid email';

  @override
  String get loginPasswordRequired => 'Password cannot be empty';

  @override
  String get darkModeSettingsTitle => 'Dark Mode Image Processing';

  @override
  String get darkModeSettingsDarkTextThreshold => 'Dark Text Threshold';

  @override
  String darkModeSettingsDarkTextThresholdDescription(String value) {
    return '$value (0-255) - Lower values capture more text';
  }

  @override
  String get darkModeSettingsWhiteThreshold => 'White Threshold';

  @override
  String darkModeSettingsWhiteThresholdDescription(String value) {
    return '$value (0-255)';
  }

  @override
  String get darkModeSettingsDarkenFactor => 'Darken Factor';

  @override
  String darkModeSettingsDarkenFactorDescription(String value) {
    return '$value%';
  }

  @override
  String get darkModeSettingsLightenFactor => 'Lighten Factor';

  @override
  String darkModeSettingsLightenFactorDescription(String value) {
    return '$value%';
  }

  @override
  String get darkModeSettingsNote =>
      'Note: Changes will apply to new image renders. Existing cached images will use the old settings.';

  @override
  String get darkModeSettingsResetDefaults => 'Reset to Defaults';

  @override
  String get darkModeSettingsClose => 'Close';

  @override
  String get clearCacheSelectTypes => 'Select cache types to clear:';

  @override
  String get clearCachePdfImages => 'PDF Images';

  @override
  String get clearCacheDarkModeSettings => 'Dark Mode Settings';

  @override
  String get clearCacheJobHistory => 'Job History';

  @override
  String get clearCacheTotalSize => 'Total Cache Size:';

  @override
  String get clearCacheClearSelected => 'Clear Selected';

  @override
  String get clearCacheClearAll => 'Clear All';

  @override
  String get clearCacheSuccess => 'Selected caches cleared successfully';

  @override
  String get clearCacheAllSuccess => 'All caches cleared successfully';

  @override
  String get fontSettingsTitle => 'Font Settings';

  @override
  String get fontSettingsSubtitle => 'Choose app font';

  @override
  String get fontLXGWWenKaiMono => 'LXGW WenKai Mono';

  @override
  String get fontSystem => 'System Default';

  @override
  String get ocrProcessingInProgress => 'Processing OCR...';

  @override
  String get ocrTaskCompleted => 'OCR processing completed!';

  @override
  String ocrTaskStartFailed(String error) {
    return 'OCR task start failed: $error';
  }

  @override
  String get renderFailed => 'Render failed';

  @override
  String get copyAllText => 'Copy all text';

  @override
  String get textCopied => 'Text copied to clipboard';

  @override
  String get copyText => 'Copy text';

  @override
  String get selectAll => 'Select all';

  @override
  String get copy => 'Copy';

  @override
  String get createNewDocument => 'Create New Document';

  @override
  String get thisDocumentIsEmpty =>
      'This document is empty. Add a page to get started!';

  @override
  String get tags => 'Tags';

  @override
  String get addTag => 'Add a tag';

  @override
  String get filterByTags => 'Filter by Tags';

  @override
  String get goodMorning => 'Good morning';

  @override
  String get goodAfternoon => 'Good afternoon';

  @override
  String get goodEvening => 'Good evening';

  @override
  String get loadingDocuments => 'Loading Documents...';

  @override
  String get selectFromFiles => 'Select from Files';

  @override
  String get refresh => 'Refresh';

  @override
  String get pagesUploadedSuccessfully => 'Pages uploaded successfully!';

  @override
  String get pdfUploadedSuccessfully =>
      'PDF uploaded successfully! Processing pages...';

  @override
  String get failedToCreateDocument => 'Failed to create document';

  @override
  String get theConnectErrored => 'The connect errored';

  @override
  String get cancelCreate => 'Cancel Create';

  @override
  String get titleCannotBeEmpty => 'Title cannot be empty';

  @override
  String get create => 'Create';

  @override
  String get versionHistory => 'Version History';

  @override
  String get viewVersionHistory => 'View version history';

  @override
  String get noVersionHistoryFound => 'No version history found.';

  @override
  String get current => 'Current';

  @override
  String get numberOfColumns => 'Number of Columns';

  @override
  String get searchDocuments => 'Search Documents';

  @override
  String get searchDocumentsPagesContent =>
      'Search documents, pages, content...';

  @override
  String get startTypingToSearch => 'Start typing to search.';

  @override
  String get searchFailed => 'Search failed';

  @override
  String get uploadingAndProcessingPdf => 'Uploading and processing PDF...';

  @override
  String get pdfUploadFailed => 'PDF upload failed';

  @override
  String get noResultsFound => 'No results found.';

  @override
  String get accErr001 => 'User with this email already exists.';

  @override
  String get accErr002 => 'User creation failed.';

  @override
  String get accSuc001 => 'User created successfully!';

  @override
  String get accErr003 => 'Invalid email or password.';

  @override
  String get pagErr001 => 'File is required.';

  @override
  String get pagErr002 => 'Document not found or does not belong to you.';

  @override
  String pagErr003(String duplicatePageIds) {
    return 'Duplicate PageIds found in the request: $duplicatePageIds';
  }

  @override
  String pagErr004(String duplicateOrders) {
    return 'Duplicate Order numbers found in the request: $duplicateOrders';
  }

  @override
  String get pagErr005 =>
      'Failed to update page orders. Ensure all pages belong to the specified document and user.';

  @override
  String pagErr006(String maxOrder) {
    return 'NewOrder must be between 1 and $maxOrder.';
  }

  @override
  String get pagErr007 => 'Failed to update page orders during insertion.';

  @override
  String get pagErr008 => 'No files provided.';

  @override
  String get pagErr009 => 'No image files provided.';

  @override
  String get pagErr010 => 'Upload a valid PDF file.';

  @override
  String get pagErr011 => 'Only PDF files are allowed.';

  @override
  String get pagErr012 => 'Document not found or has no pages.';

  @override
  String pagErr013(String pageId, String documentId) {
    return 'Page with ID $pageId not found in document $documentId.';
  }

  @override
  String get pagErr014 => 'Document not found.';

  @override
  String get docErr001 =>
      'Failed to add page to document. It may not exist, may not belong to you, or may already be in another document.';

  @override
  String get docErr002 => 'No document IDs provided.';

  @override
  String jobErr001(String jobId) {
    return 'No job found with ID: $jobId';
  }

  @override
  String jobErr002(String versionId) {
    return 'No version found with ID: $versionId';
  }

  @override
  String jobErr003(String pageId) {
    return 'No page found with ID: $pageId';
  }

  @override
  String jobErr004(String versionId) {
    return 'No version found with ID: $versionId';
  }

  @override
  String jobErr005(String jobId) {
    return 'No job found with ID: $jobId';
  }

  @override
  String get jobSuc001 => 'OCR job has been queued.';

  @override
  String get jobSuc002 => 'Stitch job has been queued.';

  @override
  String get jobSuc003 => 'Job has been cancelled successfully.';

  @override
  String get imgErr001 => 'Page not found.';

  @override
  String get imgErr002 => 'Thumbnail not available.';

  @override
  String get imgErr003 => 'Thumbnail file not found in storage.';

  @override
  String get verErr001 => 'Page not found.';

  @override
  String get verErr002 => 'Page not found.';

  @override
  String get srcErr001 => 'Search query cannot be empty.';

  @override
  String get datErr001 => 'Target user ID must be provided.';

  @override
  String get datErr002 => 'No file uploaded.';

  @override
  String get datErr003 => 'No file uploaded.';

  @override
  String get datSuc001 => 'Data imported successfully.';

  @override
  String get datSuc002 => 'Your data imported successfully.';

  @override
  String get appInfo001 => 'Initializing';

  @override
  String get pdfErr001 =>
      'Failed to read the PDF file to get page count. It may be corrupted or invalid.';

  @override
  String get pdfErr002 =>
      'Failed to read or process the PDF file. It may be corrupted or in an unsupported format.';

  @override
  String get pdfErr003 =>
      'Failed to extract text from PDF file. It may be corrupted or in an unsupported format.';

  @override
  String pdfErr004(String pageNumber) {
    return 'Failed to extract text from page $pageNumber of PDF file. It may be corrupted or in an unsupported format.';
  }

  @override
  String get ocrErr001 => 'Version not found.';

  @override
  String get ocrErr002 => 'Version is missing file metadata.';

  @override
  String get ocrErr003 => 'File not found.';

  @override
  String get ocrErr004 => 'Could not get image data from version file.';

  @override
  String get stiErr001 =>
      'At least two source images are required for stitching.';

  @override
  String get stiErr002 => 'One or more source versions could not be found.';

  @override
  String stiErr003(String status) {
    return 'Could not stitch images. Status: $status';
  }

  @override
  String stiErr004(String pageId, String userId) {
    return 'Page with ID $pageId not found for user $userId.';
  }

  @override
  String get impErr001 => 'User ID must be provided for non-admin export.';

  @override
  String get impErr002 => 'data.json not found in the import archive.';

  @override
  String get networkErrorTitle => 'Network Error';

  @override
  String get networkErrorServerOffline =>
      'Server is offline or unreachable\n\nSuggestions:\n1. Check network connection\n2. Try switching servers\n3. Retry later';

  @override
  String get networkErrorConnectionFailed =>
      'Unable to connect to server\n\nSuggestions:\n1. Check if server address is correct\n2. Check network connection\n3. Check firewall settings';

  @override
  String get networkErrorConnectionTimeout =>
      'Connection timeout\n\nSuggestions:\n1. Check network speed\n2. Try switching to a more stable network\n3. Retry later';

  @override
  String get networkErrorUnauthorized =>
      'Authentication failed\n\nYour session has expired, please login again';

  @override
  String get networkErrorForbidden =>
      'Insufficient permissions\n\nYou don\'t have permission to access this resource';

  @override
  String get networkErrorNotFound =>
      'Resource not found\n\nThe requested resource was not found';

  @override
  String get networkErrorServerError =>
      'Server error\n\nThe server encountered an error, please try again later';

  @override
  String get networkErrorGeneric =>
      'Network error\n\nPlease check your connection and try again';

  @override
  String get errorRetry => 'Retry';

  @override
  String get errorDismiss => 'Dismiss';

  @override
  String get errorDetails => 'Technical Details';

  @override
  String get errorServerUnreachable => 'Server Unreachable';

  @override
  String get errorAuthenticationFailed => 'Authentication Failed';

  @override
  String get errorOccurredTitle => 'An Error Occurred';
}
